#!/bin/bash

LIMIT_DIR="/etc/klmpk/limit/ssh/ip"
LOCK_DURATION_FILE="/etc/klmpk/limit/ssh/lock_duration"
LOCK_MARK="/etc/klmpk/lock/ssh"
mkdir -p "$LOCK_MARK"

# Fungsi notifikasi kunci
send_log_lock() {
    BOT_FILE="/etc/bot/limitip.db"
    [[ -f "$BOT_FILE" ]] || return

    read -r _ bottoken idtelegram < <(grep '^#bot#' "$BOT_FILE")
    [[ -z "$bottoken" || -z "$idtelegram" ]] && return

    curl -s -X POST https://api.telegram.org/bot${bottoken}/sendMessage \
        -d chat_id="${idtelegram}" \
        -d text="ðŸš« *SSH User:* \`$user\` melanggar batas login IP.
*Status:* Dikunci sementara selama *$LOCK_DURATION menit*.
*Jumlah IP Aktif:* $cekcek
*Batas Maksimal:* $iplimit" \
        -d parse_mode="Markdown" > /dev/null
}

# Fungsi notifikasi buka
send_log_unlock() {
    BOT_FILE="/etc/bot/limitip.db"
    [[ -f "$BOT_FILE" ]] || return

    read -r _ bottoken idtelegram < <(grep '^#bot#' "$BOT_FILE")
    [[ -z "$bottoken" || -z "$idtelegram" ]] && return

    curl -s -X POST https://api.telegram.org/bot${bottoken}/sendMessage \
        -d chat_id="${idtelegram}" \
        -d text="âœ… *SSH User:* \`$user\` telah *dibuka kembali* setelah terkunci selama $LOCK_DURATION menit." \
        -d parse_mode="Markdown" > /dev/null
}

# Ambil durasi kunci
if [[ -f "$LOCK_DURATION_FILE" ]]; then
    LOCK_DURATION=$(cat "$LOCK_DURATION_FILE")
else
    LOCK_DURATION=15
fi

# Ambil log user login aktif
mulog=$(cekssh)
now=$(date +%s)

# Proses tiap user yang dibatasi
for user in $(ls $LIMIT_DIR); do
    iplimit=$(cat "$LIMIT_DIR/$user")
    cekcek=$(echo "$mulog" | grep -w "$user" | wc -l)

    if [[ $cekcek -gt $iplimit ]]; then
        # Jika user belum dikunci sebelumnya, kunci sekarang
        if [[ ! -f "$LOCK_MARK/$user" ]]; then
            echo "Akun $user melebihi limit IP, dikunci $LOCK_DURATION menit"
            passwd -l "$user" > /dev/null
            date +%s > "$LOCK_MARK/$user"
            send_log_lock
        fi
    else
        # Jika user terkunci tapi waktunya sudah habis, buka akun
        if [[ -f "$LOCK_MARK/$user" ]]; then
            lock_time=$(cat "$LOCK_MARK/$user")
            expire=$((lock_time + LOCK_DURATION * 60))
            if [[ $now -ge $expire ]]; then
                echo "Akun $user dibuka kembali setelah kunci"
                passwd -u "$user" > /dev/null
                rm -f "$LOCK_MARK/$user"
                send_log_unlock
            fi
        fi
    fi
done
