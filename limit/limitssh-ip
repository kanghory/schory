#!/bin/bash
LIMIT_DIR="/etc/klmpk/limit/ssh/ip"
LOCK_DURATION_FILE="/etc/klmpk/limit/ssh/lock_duration"
SERVICE="limitssh.service"

# Fungsi kirim notifikasi Telegram
send_log() {
    BOT_FILE="/etc/bot/limitip.db"
    [[ -f "$BOT_FILE" ]] || return

    read -r _ bottoken idtelegram < <(grep '^#bot#' "$BOT_FILE")
    [[ -z "$bottoken" || -z "$idtelegram" ]] && return

    curl -s -X POST https://api.telegram.org/bot${bottoken}/sendMessage \
        -d chat_id="${idtelegram}" \
        -d text="ðŸš« *SSH User:* \`$user\` melanggar batas login IP.
*Status:* Dikunci sementara selama *$LOCK_DURATION menit*.
*Jumlah IP Aktif:* $cekcek
*Batas Maksimal:* $iplimit" \
        -d parse_mode="Markdown" > /dev/null
}

# Membaca durasi terkunci dari file
if [[ -f "$LOCK_DURATION_FILE" ]]; then
    LOCK_DURATION=$(cat "$LOCK_DURATION_FILE")
else
    LOCK_DURATION=15  # Default durasi 15 menit
fi

# Mengambil log aktivitas login
mulog=$(cekssh)

# Loop untuk mengecek user dan limit IP
for user in $(ls $LIMIT_DIR); do
    iplimit=$(cat "$LIMIT_DIR/$user")
    cekcek=$(echo "$mulog" | grep "$user" | wc -l)

    # Cek jika jumlah login melebihi limit
    if [[ $cekcek -gt $iplimit ]]; then
        echo "Akun $user melebihi batas login, mengunci akun selama $LOCK_DURATION menit..."

        # Kunci akun
        passwd -l "$user" > /dev/null

        # Kirim log ke Telegram
        send_log

        # Jadwalkan untuk membuka akun kembali setelah durasi terkunci
        echo "passwd -u $user" | at now + $LOCK_DURATION minutes > /dev/null
    fi
done
